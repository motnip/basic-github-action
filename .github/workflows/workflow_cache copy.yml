# This is a basic workflow to help you get started with Actions

name: workflow-with-cache
# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  no-cache:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash
      - uses: actions/checkout@v2
      - name: Cache codebase
        uses: actions/cache@v2
        env:
          cache-name: cache-gocode
        with:
          # Cache the code base of the project
          path: ~/sample.txt
          key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-sample
      - name: list-file
        run: |
          echo "pwd"
          pwd
          echo "list file"
          ls .
  use-cache:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: cache-hit
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: |
          echo "cache miss :("
      - name: verify
        run: |
          echo "pwd"
          pwd
          echo "list file"
          ls .
    